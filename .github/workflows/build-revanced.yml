name: Build ReVanced YT

on:
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write

env:
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: 'zulu'
  ARCH: 'arm64-v8a'
  DOWNLOADS_DIR: 'downloads'
  KEYSTORE_NAME: 'yt-patched.keystore'
  TIMEZONE: 'Asia/Kuala_Lumpur'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history including tags

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Make scripts executable
        run: chmod +x *.sh

      - name: Get ReVanced CLI version (Stable)
        id: get-stable-cli-version
        run: |
          VERSION=$(./get-stable-cli.sh --version-only)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache ReVanced CLI
        id: cache-cli
        uses: actions/cache@v4
        with:
          path: revanced-cli-*-all.jar
          key: revanced-cli-${{ steps.get-stable-cli-version.outputs.version }}

      - name: Download ReVanced CLI
        if: steps.cache-cli.outputs.cache-hit != 'true'
        run: |
          VERSION=$(./get-stable-cli.sh)
          echo "Downloaded CLI version: $VERSION"

      - name: Get Dev Patches version
        id: get-dev-patches-version
        run: |
          VERSION=$(./get-dev-rvp.sh --version-only)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache ReVanced Patches
        id: cache-patches
        uses: actions/cache@v4
        with:
          path: patches-*-dev.*.rvp
          key: revanced-patches-${{ steps.get-dev-patches-version.outputs.version }}

      - name: Download ReVanced Patches
        if: steps.cache-patches.outputs.cache-hit != 'true'
        run: |
          VERSION=$(./get-dev-rvp.sh)
          echo "Downloaded patches version: $VERSION"

      - name: Get APKMirror Downloader version
        id: get-apkmd-version
        run: |
          VERSION=$(./get-apkmd.sh --version-only)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache APKMirror Downloader
        id: cache-apkmd
        uses: actions/cache@v4
        with:
          path: apkmd
          key: apkmd-${{ steps.get-apkmd-version.outputs.version }}

      - name: Download APKMirror Downloader
        if: steps.cache-apkmd.outputs.cache-hit != 'true'
        run: |
          VERSION=$(./get-apkmd.sh)
          echo "Downloaded APKMirror Downloader version: $VERSION"

      - name: Determine YT Version
        id: yt-version
        run: |
          VERSION=$(./fetch-yt-ver.sh)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get last release tag and extract patch version
        id: get-last-patch
        run: |
          latest_version=$(./get-dev-rvp.sh || true)
          current_tag=$(git tag -l --sort=-version:refname | head -n1 || true)

          # If equal, fallback to previous tag
          [ "$latest_version" = "$current_tag" ] && \
            current_tag=$(git tag -l --sort=-version:refname | sed -n '2p' || true)

          # Defaults
          [ -z "$latest_version" ] && latest_version="none"
          [ -z "$current_tag" ] && current_tag="none"

          {
            echo "latest_version=$latest_version"
            echo "current_tag=$current_tag"
          } >> "$GITHUB_OUTPUT"

      - name: Generate changelog URL
        id: generate-changelog
        run: |
          current_tag="${{ steps.get-last-patch.outputs.current_tag }}"
          latest_version="${{ steps.get-last-patch.outputs.latest_version }}"

          if [[ "$latest_version" != "none" && "$latest_version" != "$current_tag" ]]; then
            CHANGELOG_URL="https://github.com/ReVanced/revanced-patches/compare/${current_tag}...${latest_version}"
            echo "url=$CHANGELOG_URL" >> $GITHUB_OUTPUT
            echo "has_changelog=true" >> $GITHUB_OUTPUT
          else
            echo "has_changelog=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache YT APK 
        id: cache-apk
        uses: actions/cache@v4
        with: 
          path: ${{ env.DOWNLOADS_DIR }}/yt-${{ steps.yt-version.outputs.version }}.apk
          key: ${{ steps.yt-version.outputs.version }}

      - name: Download YT APK
        if: steps.cache-apk.outputs.cache-hit != 'true'
        run: |
          VERSION="${{ steps.yt-version.outputs.version }}"
          # Download universal APK
          cat <<EOF > apps.json
          {
            "options": {
              "arch": "${{ env.ARCH }}",
              "outDir": "${{ env.DOWNLOADS_DIR }}"
            },
            "apps": [
              {
                "org": "google-inc",
                "repo": "youtube",
                "outFile": "yt-${VERSION}",
                "version": "$VERSION"
              }
            ]
          }
          EOF
          ./apkmd apps.json

      - name: Cache ReVanced keystore
        id: cache-keystore
        uses: actions/cache@v4
        with:
          path: ${{ env.KEYSTORE_NAME }}
          key: ${{ env.KEYSTORE_NAME }}

      - name: Set output filename
        id: set-filename
        run: |
          FILENAME="yt_${{ steps.yt-version.outputs.version }}_${{ steps.get-dev-patches-version.outputs.version }}-patched.apk"
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Patch YT APK and generate keystore
        if: steps.cache-keystore.outputs.cache-hit != 'true'
        run: |
            java -jar revanced-cli-*-all.jar patch -p patches-*-dev.*.rvp ${{ env.DOWNLOADS_DIR }}/yt-*.apk -o "${{ steps.set-filename.outputs.filename }}"
            mv yt-*-patched.keystore ${{ env.KEYSTORE_NAME }}

      - name: Patch YT APK and use cached keystore
        if: steps.cache-keystore.outputs.cache-hit == 'true'
        run: |
            java -jar revanced-cli-*-all.jar patch -p patches-*-dev.*.rvp ${{ env.DOWNLOADS_DIR }}/yt-*.apk --keystore ${{ env.KEYSTORE_NAME }} -o "${{ steps.set-filename.outputs.filename }}"

      - name: Generate APKmirror url
        id: generate-apkmirror-url
        run: |
          # Set the version
          version=${{ steps.yt-version.outputs.version }}

          # Replace dots with dashes
          version_dash="${version//./-}"

          # Construct the URL
          URL="https://www.apkmirror.com/apk/google-inc/youtube/youtube-${version_dash}-release/youtube-${version_dash}-2-android-apk-download/#safeDownload"

          # Output the URL
          echo "$URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Generate build information
        run: |
          YT_VERSION="${{ steps.yt-version.outputs.version }}"
          CLI_VERSION="${{ steps.get-stable-cli-version.outputs.version }}"
          PATCHES_VERSION="${{ steps.get-dev-patches-version.outputs.version }}"
          URL="${{ steps.generate-apkmirror-url.outputs.url }}"
          FILENAME="${{ steps.set-filename.outputs.filename }}"
          ORIGINAL_APK="${{ env.DOWNLOADS_DIR }}/yt-${YT_VERSION}.apk"
          HAS_CHANGELOG="${{ steps.generate-changelog.outputs.has_changelog }}"
          CHANGELOG_URL="${{ steps.generate-changelog.outputs.url }}"
          
          # Generate changelog section if available
          CHANGELOG_SECTION=""
          if [[ "$HAS_CHANGELOG" == "true" ]]; then
            CHANGELOG_SECTION="
          - **üìù Changelog**: [View changes]($CHANGELOG_URL)"
          fi
          
          cat <<EOF > yt-revanced-info.md
          ## üí° ReVanced YT Build Information

          - **üì∫ YT Version**: \`${YT_VERSION}\` [SHA-256]($URL)
          - **üì¶ APK Filename**: \`${FILENAME}\`
          - **üß© ReVanced Patches Version**: \`${PATCHES_VERSION}\`
          - **üî® ReVanced CLI Version**: \`${CLI_VERSION}\`$CHANGELOG_SECTION
          - **üìÖ Build Date**: \`$(TZ=${{ env.TIMEZONE }} date +%Y-%m-%d)\` \`$(TZ=${{ env.TIMEZONE }} date +%H:%M:%S%:z)\`

          -----
          ### üîê APK file hashes 

          | SHA-256 Checksum | Filename |
          |-----------------|----------|
          | \`$(sha256sum ${FILENAME} | awk '{print $1}')\` | ${FILENAME} |
          | \`$(sha256sum ${ORIGINAL_APK} | awk '{print $1}')\` | yt-${YT_VERSION}.apk (original) |
          EOF

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: "üì∫ YT ${{ steps.yt-version.outputs.version }} | üß© ${{ steps.get-dev-patches-version.outputs.version }}"
          tag_name: ${{ steps.get-dev-patches-version.outputs.version }}
          body_path: yt-revanced-info.md
          files: |
            ${{ steps.set-filename.outputs.filename }}
            ${{ env.KEYSTORE_NAME }}
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}